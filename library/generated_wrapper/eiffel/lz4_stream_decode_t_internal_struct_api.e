note

	description: "This file has been generated by EWG. Do not edit. Changes will be lost!"

	generator: "Eiffel Wrapper Generator"

class LZ4_STREAM_DECODE_T_INTERNAL_STRUCT_API

inherit

	MEMORY_STRUCTURE

	
create

	make,
	make_by_pointer

feature -- Measurement

	structure_size: INTEGER 
		do
			Result := sizeof_external
		end

feature {ANY} -- Member Access

	externaldict:  detachable C_STRING
			-- Access member `externalDict`
		require
			exists: exists
		do
			if attached c_externaldict (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_externaldict (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_externaldict (a_value: C_STRING) 
			-- Change the value of member `externalDict` to `a_value`.
		require
			exists: exists
		do
			set_c_externaldict (item, a_value.item )
		end

	extdictsize: INTEGER
			-- Access member `extDictSize`
		require
			exists: exists
		do
			Result := c_extdictsize (item)
		ensure
			result_correct: Result = c_extdictsize (item)
		end

	set_extdictsize (a_value: INTEGER) 
			-- Change the value of member `extDictSize` to `a_value`.
		require
			exists: exists
		do
			set_c_extdictsize (item, a_value)
		ensure
			extdictsize_set: a_value = extdictsize
		end

	prefixend:  detachable C_STRING
			-- Access member `prefixEnd`
		require
			exists: exists
		do
			if attached c_prefixend (item) as l_ptr then
				create Result.make_by_pointer (l_ptr)
			end
		ensure
			result_void: Result = Void implies c_prefixend (item) = default_pointer
			result_not_void: attached Result as l_result implies l_result.string.same_string ((create {C_STRING}.make_by_pointer (item)).string)
		end

	set_prefixend (a_value: C_STRING) 
			-- Change the value of member `prefixEnd` to `a_value`.
		require
			exists: exists
		do
			set_c_prefixend (item, a_value.item )
		end

	prefixsize: INTEGER
			-- Access member `prefixSize`
		require
			exists: exists
		do
			Result := c_prefixsize (item)
		ensure
			result_correct: Result = c_prefixsize (item)
		end

	set_prefixsize (a_value: INTEGER) 
			-- Change the value of member `prefixSize` to `a_value`.
		require
			exists: exists
		do
			set_c_prefixsize (item, a_value)
		ensure
			prefixsize_set: a_value = prefixsize
		end

feature {NONE} -- Implementation wrapper for struct LZ4_streamDecode_t_internal

	sizeof_external: INTEGER 
		external
			"C inline use <lz4.h>"
		alias
			"sizeof(LZ4_streamDecode_t_internal)"
		end

	c_externaldict (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <lz4.h>"
		alias
			"[
				((LZ4_streamDecode_t_internal*)$an_item)->externalDict
			]"
		end

	set_c_externaldict (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <lz4.h>"
		alias
			"[
				((LZ4_streamDecode_t_internal*)$an_item)->externalDict =  (uint8_t const*)$a_value
			]"
		ensure
			externaldict_set: a_value = c_externaldict (an_item)
		end

	c_extdictsize (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <lz4.h>"
		alias
			"[
				((LZ4_streamDecode_t_internal*)$an_item)->extDictSize
			]"
		end

	set_c_extdictsize (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <lz4.h>"
		alias
			"[
				((LZ4_streamDecode_t_internal*)$an_item)->extDictSize =  (size_t)$a_value
			]"
		ensure
			extdictsize_set: a_value = c_extdictsize (an_item)
		end

	c_prefixend (an_item: POINTER): POINTER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <lz4.h>"
		alias
			"[
				((LZ4_streamDecode_t_internal*)$an_item)->prefixEnd
			]"
		end

	set_c_prefixend (an_item: POINTER; a_value: POINTER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <lz4.h>"
		alias
			"[
				((LZ4_streamDecode_t_internal*)$an_item)->prefixEnd =  (uint8_t const*)$a_value
			]"
		ensure
			prefixend_set: a_value = c_prefixend (an_item)
		end

	c_prefixsize (an_item: POINTER): INTEGER
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <lz4.h>"
		alias
			"[
				((LZ4_streamDecode_t_internal*)$an_item)->prefixSize
			]"
		end

	set_c_prefixsize (an_item: POINTER; a_value: INTEGER) 
		require
			an_item_not_null: an_item /= default_pointer
		external
			"C inline use <lz4.h>"
		alias
			"[
				((LZ4_streamDecode_t_internal*)$an_item)->prefixSize =  (size_t)$a_value
			]"
		ensure
			prefixsize_set: a_value = c_prefixsize (an_item)
		end

end
